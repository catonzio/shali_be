"""Addedo column is_checked to lists

Revision ID: 0d6200148cb1
Revises: 51da89984ce8
Create Date: 2023-09-09 16:43:36.816241

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0d6200148cb1"
down_revision: Union[str, None] = "51da89984ce8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('users_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "username", sa.VARCHAR(length=80), autoincrement=False, nullable=False
        ),
        sa.Column(
            "password", sa.VARCHAR(length=80), autoincrement=False, nullable=False
        ),
        sa.Column("email", sa.VARCHAR(length=200), autoincrement=False, nullable=False),
        sa.Column(
            "device_token", sa.VARCHAR(length=200), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_users_username", "users", ["username"], unique=False)
    op.create_index("ix_users_id", "users", ["id"], unique=False)

    op.create_table(
        "lists",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=80), autoincrement=False, nullable=False),
        sa.Column(
            "description", sa.VARCHAR(length=200), autoincrement=False, nullable=True
        ),
        sa.Column(
            "is_checked", sa.INTEGER, autoincrement=False, nullable=True, default=0
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="lists_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="lists_pkey"),
    )
    op.create_index("ix_lists_id", "lists", ["id"], unique=False)
    # ### end Alembic commands ###

    op.create_table(
        "items",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=80), autoincrement=False, nullable=False),
        sa.Column(
            "description", sa.VARCHAR(length=200), autoincrement=False, nullable=True
        ),
        sa.Column("list_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["list_id"], ["lists.id"], name="items_list_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="items_pkey"),
    )
    op.create_index("ix_items_name", "items", ["name"], unique=False)
    op.create_index("ix_items_id", "items", ["id"], unique=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_items_id", table_name="items")
    op.drop_index("ix_items_name", table_name="items")
    op.drop_table("items")
    op.drop_index("ix_lists_id", table_name="lists")
    op.drop_table("lists")
    op.drop_index("ix_users_id", table_name="users")
    op.drop_index("ix_users_username", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
